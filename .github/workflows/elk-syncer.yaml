name: ElkSyncer CI

on:
  push:
    branches:
      - master
      - develop
    paths:
      - 'elkSyncer/**'
      - '.github/workflows/elk-syncer.yaml'
    tags:
      - '*'

jobs:
  elkSyncer:
    runs-on: ubuntu-18.04

    # name: Node ${{ matrix.node-version }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Prepare release assets [tag]
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tar -zcf erxes-elkSyncer-${GITHUB_REF#refs/tags/}.tar.gz elkSyncer

    - name: Get release version [tag]
      id: get_release_version
      if: startsWith(github.ref, 'refs/tags/')
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Upload release assets [tag]
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
          files: ./erxes-elkSyncer-${{ steps.get_release_version.outputs.VERSION }}.tar.gz
          name: Release ${{ steps.get_release_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build docker image [push]
      if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' )
      run: |
        cd elkSyncer
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t erxes/erxes-elksyncer:${GITHUB_REF#refs/heads/} -f Dockerfile .
        docker push erxes/erxes-elksyncer:${GITHUB_REF#refs/heads/}

    - name: Build docker image [tag]
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      run: |
        cd elkSyncer
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t erxes/erxes-elksyncer:${GITHUB_REF#refs/tags/} -f Dockerfile .
        docker push erxes/erxes-elksyncer:${GITHUB_REF#refs/tags/}
